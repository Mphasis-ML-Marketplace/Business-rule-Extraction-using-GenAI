from flask import Flask, request, Response, send_file
import os
from main import main_inference
from main import zipfile

app = Flask(__name__)

@app.route("/ping", methods=["GET"])
def ping():
    """Determine if the container is working and healthy. In this sample container, we declare
    it healthy if we can load the model successfully."""
    status = 200

    return Response(response="ping success", status=status, mimetype="application/json")

@app.route("/invocations", methods=["POST"])
def invocations():
    
    pwd = os.getcwd()
    Output_path = os.path.join(os.getcwd(), 'Output', 'Output_data.zip')
    # Checking whether the uploaded file is in zip or not
    if request.content_type == 'application/zip':

        try:
            data_file = request.data
            zip_path = os.path.join(pwd,'Input_data.zip')
            with open(zip_path, 'wb') as zip_data:
                zip_data.write(data_file)
        except Exception as e:
            print(e)
            return Response(response="Invalid content type", status=500)
        
        # Check if file is saved correctly
        if os.path.exists(zip_path):                
            print(f"File saved successfully to {zip_path}")            
        else:                
            print(f"Failed to save file to {zip_path}")                
            return Response(response="Failed to save file", status=500)


        try:
            output_files = main_inference(zip_path)

            with zipfile.ZipFile(Output_path, 'w') as zipf:
                for file in output_files:
                      zipf.write(file)
            print("Output Saved")

            output_obj=open(Output_path,'rb')

            return send_file(output_obj, mimetype="application/zip")
            

        except Exception as e:
            print(e)
            return Response(response= e, status=500, mimetype="text/plain")

    else:
        print(request.content_type)
        return Response(response="Please send a proper format file", status=400)
    
if __name__ == '__main__':
    app.run(debug=True, port=8080, host='0.0.0.0')

